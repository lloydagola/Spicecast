{"version":3,"sources":["utils/api.js","context/AudioContext.js","components/MainMenu/index.jsx","components/AudioPlayer/AudioPlayer.jsx","components/Sidebar/index.jsx","components/SidebarLeft/index.jsx","components/SidebarRight/index.jsx","components/PlaylistView/PlaylistView.jsx","components/SinglePodcast/SinglePodcast.jsx","layouts/PodcastGrid/PodcastGrid.jsx","components/SingleAlbum/SingleAlbum.jsx","layouts/AlbumGrid/AlbumGrid.jsx","Pages/Feed.js","components/ParentInfo/index.js","components/PlaylistTable/index.js","Pages/PodcastDetails.js","Pages/AlbumDetails.js","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","AppContext","createContext","AudioContext","AppProvider","children","Provider","AudioProvider","useState","playState","nowPlaying","title","path","_id","parent","thumbnail","playlistIsHidden","playlist","audioState","setAudioState","albums","setAlbums","podcasts","setPodcasts","fetchData","a","url","fetch","res","json","useEffect","albs","pods","console","log","value","playTrack","track","stopTrack","toggleTrack","MainMenu","className","to","href","AudioPlayer","props","useContext","togglePlayState","setValue","currentTime","setCurrentTime","trackDuration","setTrackDuration","player","useRef","progressBarRef","current","onloadedmetadata","minutes","Math","floor","seconds_int","duration","toString","substr","calculateTotalValue","toFixed","ontimeupdate","e","parseInt","current_minute","current_seconds","calculateCurrentValue","srcElement","load","play","pause","id","ref","src","type","onClick","paused","handlePlay","handleStop","max","evt","percent","nativeEvent","offsetX","offsetWidth","Sidebar","SidebarLeft","alt","SidebarRight","PlaylistView","React","memo","classes","podcast","album","formatTrack","SinglePodcast","contributors","hosts","episodes","toUpperCase","length","map","contributor","PodcastGrid","start","end","slice","index","key","renderPodcasts","SingleAlbum","contributingArtists","tracks","AlbumGrid","renderAlbums","Feed","renderContributors","PlaylistTable","items","item","artist","PodcastDetails","state","this","match","params","then","setState","prevState","catch","error","episode","ParentInfo","Component","AlbumDetails","playlistTable","parentInfo","App","exact","component","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1dd293d8.chunk.js","sourcesContent":["export const BASE_URL = \"http://localhost:4040\";\r\n","import React, {createContext, useState, useEffect} from 'react';\r\nimport {BASE_URL} from '../utils/api';\r\n\r\nexport const AppContext = createContext({});\r\nexport const AudioContext = createContext({});\r\n\r\nexport const AppProvider = ({children}) => {\r\n\r\n    return <AppContext.Provider>{children}</AppContext.Provider>\r\n}\r\n\r\nexport const AudioProvider = ({children}) => {\r\n    \r\n  const [audioState, setAudioState] = useState({\r\n    playState : \"loaded\",\r\n    nowPlaying:{\r\n      title: \"What is\",\r\n      path: \"audio/default.mp3\",\r\n      _id: \"5daff1899a645939c0471689\",\r\n      parent: {\r\n          _id: \"5d709cd63eb0e22750940d2d\",\r\n          title: \"Brexit\",\r\n          thumbnail: `images/no-image.jpg`,\r\n      }\r\n    },\r\n    playlistIsHidden : false,\r\n    playlist : []\r\n  })\r\n  const [albums, setAlbums] = useState([])\r\n  const [podcasts, setPodcasts] = useState([])\r\n\r\n  \r\n\r\n  async function fetchData(url = `${BASE_URL}/api/albums`){        \r\n      const res = await fetch(url)\r\n      const json = await res.json()\r\n      return json\r\n  }\r\n\r\n  useEffect(() => { \r\n    (async function loadData(){\r\n\r\n      try{ \r\n        const albs = await fetchData(`${BASE_URL}/api/albums`); \r\n        const pods = await fetchData(`${BASE_URL}/api/podcasts`);\r\n        \r\n        setAlbums(albs);\r\n        setPodcasts(pods);\r\n        \r\n      }\r\n      catch(e){\r\n        console.log('an error occurred in App', e)\r\n      }\r\n    })()\r\n  }, [])\r\n\r\n\r\n  const playTrack = track => {               \r\n        \r\n    if (track.title === audioState.nowPlaying.title && audioState.playState == \"playing\"){\r\n      \r\n      setAudioState({\r\n          ...audioState, \r\n          playState:'paused'        \r\n      }); \r\n      return         \r\n    }\r\n    else{\r\n      \r\n      setAudioState({   \r\n        ...audioState,           \r\n        playState:'playing',\r\n        nowPlaying:track\r\n    });\r\n    return\r\n    }\r\n  }\r\n  const stopTrack = () => {  \r\n     \r\n    setAudioState({\r\n        ...audioState, \r\n        playState:'stopped'      \r\n    });  \r\n    \r\n  }\r\n  const toggleTrack = () => {  \r\n    if(audioState.playState === \"playing\"){\r\n      setAudioState({  \r\n            ...audioState,           \r\n            playState:'paused'\r\n        })  \r\n    }else{\r\n      setAudioState({   \r\n            ...audioState,           \r\n            playState:'playing'         \r\n        })  \r\n    }\r\n  }\r\n  \r\n\r\n    return <AudioContext.Provider value={{audioState, playTrack,stopTrack, toggleTrack, podcasts, albums}}>\r\n        {children}\r\n    </AudioContext.Provider>\r\n};\r\n\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport \"./styles.css\";\r\n\r\nconst MainMenu = () => <menu className=\"main-menu\">\r\n    <div className=\"menu-logo\">\r\n        <Link to=\"/\"><h1> <i className=\"fas fa-stream\"/> Spicecast</h1></Link>\r\n    </div>\r\n    <ul className=\"menu-items\">         \r\n        <li><a href=\"localhost:3001\"><i className=\"fas fa-plus\"/> Post</a></li>\r\n        <li><a href=\"localhost:3001\"><i className=\"fas fa-cloud-upload-alt\"/> Uploads</a></li>\r\n        <li><a href=\"localhost:3001\"><i className=\"fas fa-th-large\"/> Categories</a></li>\r\n        <li><a href=\"localhost:3001\"><i className=\"fas fa-bell yellow\"/> 3</a></li>\r\n        <li><a href=\"localhost:3001\"><i className=\"fas fa-user\"/> Sign in</a></li>\r\n    </ul>\r\n\r\n</menu>\r\n\r\nexport default MainMenu;","import React, { useContext, useRef, useState, useEffect } from 'react';\r\nimport './styles.css';\r\nimport {BASE_URL} from '../../utils/api';\r\nimport {AudioContext} from '../../context/AudioContext'\r\n\r\nconst AudioPlayer = props => {\r\n    const {audioState, togglePlayState, toggleTrack, stopTrack} = useContext(AudioContext)\r\n\r\n    const [value, setValue] = useState(0)\r\n    const [currentTime, setCurrentTime] = useState('00:00')\r\n    const [trackDuration, setTrackDuration] = useState(0)\r\n\r\n    const player = useRef(null)\r\n    const progressBarRef = useRef(null)\r\n    \r\n    const calculateTotalValue = (trackDuration) => {\r\n        var minutes = Math.floor( trackDuration / 60),\r\n          seconds_int = player.current.duration - minutes * 60,\r\n          seconds_str = seconds_int < 10 ? '0' + seconds_int.toString() : seconds_int.toString(),\r\n          seconds = seconds_str.substr(0, 2),\r\n          time = minutes + ':' + seconds        \r\n          \r\n      \r\n        return time;\r\n    }\r\n      \r\n    const calculateCurrentValue = (currentTime) => {\r\n        var current_hour = parseInt(currentTime / 3600) % 24,\r\n          current_minute = parseInt(currentTime / 60) % 60,\r\n          current_seconds_long = currentTime % 60,\r\n          current_seconds = current_seconds_long.toFixed(),\r\n          current_time = (current_minute < 10 ? \"0\" + current_minute : current_minute) + \":\" + (current_seconds < 10 ? \"0\" + current_seconds : current_seconds);\r\n                \r\n        return current_time;\r\n    }\r\n\r\n    const togglePlayButton = playState => playState === 'playing' ? 'fas fa-pause pause-icon' : 'far fa-play-circle play-icon'\r\n    \r\n    const seek = (evt) => {\r\n        const percent = evt.nativeEvent.offsetX / progressBarRef.current.offsetWidth;\r\n        \r\n        player.current.currentTime = percent * player.current.duration;\r\n        setValue(percent / 100);\r\n    }\r\n\r\n    const updateProgressBar = () => player.current.currentTime / player.current.duration;\r\n\r\n    const handlePlay = toggleTrack => {\r\n\r\n        toggleTrack()\r\n        if (player.current.paused === false) {\r\n            player.current.pause();\r\n            \r\n        }\r\n        else {\r\n            player.current.play();  \r\n        }\r\n    }\r\n\r\n    const handleStop = stopTrack => {\r\n        setValue(0)\r\n        stopTrack();\r\n    }\r\n\r\n    useEffect(() => {\r\n        player.current.onloadedmetadata = () => setTrackDuration(calculateTotalValue(player.current.duration.toFixed(0)));                 \r\n        player.current.ontimeupdate = e => {\r\n                setCurrentTime(calculateCurrentValue(e.srcElement.currentTime))\r\n                setValue(updateProgressBar())\r\n            }\r\n    }, [value])\r\n\r\n    useEffect(() => {    \r\n        //if someone selects a new song\r\n        player.current.load();\r\n        player.current.play(); \r\n        console.log(\"playing because path changed...\");\r\n\r\n    }, [audioState.nowPlaying.path])\r\n\r\n    useEffect(() => {\r\n\r\n        switch(audioState.playState){\r\n            case 'paused':\r\n                player.current.pause();\r\n                break\r\n            //if someone resumes a previously paused track\r\n            case \"playing\":    \r\n                console.log('playing because playstate changed...');                  \r\n                player.current.play();  \r\n                break\r\n            //if someone resumes a stopped track\r\n            case \"stopped\":            \r\n                player.current.load();\r\n                break\r\n            \r\n            default:\r\n                player.current.play(); \r\n        } \r\n        \r\n\r\n    }, [audioState.playState])\r\n\r\n\r\n    \r\n\r\n    return <section id=\"audio-player\" className=\"audio-player\">   \r\n                <audio ref={player}>\r\n                    Your browser does not support the\r\n                    <code>audio</code> element.\r\n                    <source src={`${BASE_URL}/${audioState.nowPlaying.path}`} type=\"audio/mpeg\"/>\r\n                    <source src=\"http://localhost:4000/music/Xilent/we are dust/01 From Dust.mp3\" type=\"audio/mpeg\"/>\r\n                </audio>\r\n                <img src={`${BASE_URL}/${audioState.nowPlaying.parent.thumbnail}`}/>\r\n                <div className=\"audio-title\">\r\n                    <h4>{audioState.nowPlaying.parent.title} - {audioState.nowPlaying.title}</h4>\r\n                </div>\r\n                <div className=\"player-controls\">\r\n                    <i className={togglePlayButton(audioState.playState)} onClick={() => handlePlay(toggleTrack)}/>\r\n                    <i className=\"fas fa-backward\"/>\r\n                    <i className=\"fas fa-stop\" onClick={() => handleStop(stopTrack)}/>\r\n                    <i className=\"fas fa-forward\"/>\r\n                </div>\r\n                <p>{currentTime}</p>\r\n                <progress id=\"seek-obj\" value={value} max=\"1\" onClick={seek} ref={progressBarRef}/>        \r\n                <p>{trackDuration}</p>\r\n            </section> \r\n\r\n}\r\n\r\nexport default AudioPlayer;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport \"./styles.css\";\r\n\r\nexport default function Sidebar(props) {\r\n    return (\r\n        <div className=\"sidebar\">\r\n          <div className=\"sidebar-content\">\r\n            {props.children}            \r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {HashRouter as Router, Link} from 'react-router-dom';\r\nimport Sidebar from '../Sidebar';\r\nimport './styles.css';\r\n\r\nexport default function SidebarLeft() {\r\n    return (\r\n        <Sidebar>\r\n           <div className=\"sidebar-left\">\r\n            <div className=\"profile\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/d/dc/Profile-jose-bermudez.jpg\" alt=\"Profile picture\"/>\r\n                <div>\r\n                    <h5>Eric Summers</h5>\r\n                    <p>View Profile</p>\r\n                </div>\r\n            </div>\r\n            <Router>\r\n                <ul>\r\n                    <li><Link to=\"/\"><i className=\"far fa-clone\"/><h5>Feed</h5></Link></li>\r\n                    <li><Link to=\"/\"><i className=\"fas fa-compass\"/><h5>New Shows</h5></Link></li>\r\n                </ul>\r\n                <div className=\"horizontal-line grey-background\"/>\r\n                <ul>\r\n                    <li><Link to=\"/podcasts\"><i className=\"fas fa-heart\"/><h5>Favourites</h5></Link></li>\r\n                    <li><Link to=\"/\"><i className=\"fas fa-history\"/><h5>History</h5></Link></li>\r\n                    <li><Link to=\"/\"><i className=\"far fa-clock\"/><h5>Listen Later</h5></Link></li>\r\n                    <li><Link to=\"/\"><i className=\"fas fa-list\"/><h5>Playlists</h5></Link></li>\r\n                </ul>\r\n                <div className=\"horizontal-line grey-background\"/>\r\n                <ul>\r\n                    <li><Link to=\"/\"><i className=\"fas fa-chart-line\"/><h5>Trending</h5></Link></li>\r\n                </ul>                \r\n            </Router>\r\n           </div>\r\n        </Sidebar>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Sidebar from '../Sidebar';\r\nimport './styles.css';\r\n\r\nexport default function SidebarRight() {\r\n    return (\r\n        <Sidebar >\r\n            <div className=\"sidebar-right\">                \r\n                <h4>People to follow</h4>\r\n                <div className=\"follow\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/d/dc/Profile-jose-bermudez.jpg\" alt=\"Profile picture\"/>\r\n                    <div className=\"follow-profile\">\r\n                        <h5>Chris Coco</h5>\r\n                        <h6>98,000 followers</h6>\r\n                        <button>Follow</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"follow\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/d/dc/Profile-jose-bermudez.jpg\" alt=\"Profile picture\"/>\r\n                    <div className=\"follow-profile\">\r\n                        <h5>BBC World Sercice</h5>\r\n                        <h6>1,000 followers</h6>\r\n                        <button>Follow</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"follow\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/d/dc/Profile-jose-bermudez.jpg\" alt=\"Profile picture\"/>\r\n                    <div className=\"follow-profile\">\r\n                        <h5>Desi</h5>\r\n                        <h6>7,000 followers</h6>\r\n                        <button>Follow</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"horizontal-line grey-background\"/>\r\n            </div>\r\n        </Sidebar>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { AudioContext } from '../../context/AudioContext';\r\nimport './styles.css'; \r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\n//allows us to reuse the same component for both podcasts and music\r\nconst formatTrack = ({title, path, _id, podcast, album}) => ({\r\n    title,\r\n    path,\r\n    _id,\r\n    parent: podcast || album\r\n});\r\n\r\nconst areEqualTracks = (prevProps, nextProps) => {\r\n    console.log({prevProps, nextProps});\r\n\r\n    return prevProps === nextProps\r\n}\r\n\r\nconst PlaylistView = React.memo(({track, classes, }) => {    \r\n\r\n    const {audioState, playTrack} = useContext(AudioContext)\r\n    \r\n    if(!track){         \r\n        return <div className={`playlist-view ${classes}`}></div>;        \r\n    }\r\n    else return <div className={`playlist-view ${classes ? classes : \"\"}`}>\r\n                                    <div className=\"podcast-play\" onClick={() => playTrack(formatTrack(track))}>\r\n                                        {\r\n                                            audioState.playState==\"playing\" && audioState.nowPlaying.path === track.path \r\n                                            ? <i className=\"far fa-pause-circle playing\"/> \r\n                                            : <i className=\"far fa-play-circle\"/>\r\n                                        } \r\n                                        <p className=\"playing\">{track.title} </p>                       \r\n                                    </div>  \r\n                                </div>\r\n});\r\n\r\nexport default PlaylistView;","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport \"./style.css\";\r\nimport PlaylistView from \"../PlaylistView/PlaylistView\";\r\nimport {BASE_URL} from '../../utils/api';\r\n\r\nconst renderHosts = contributors => \r\n    contributors\r\n    ?contributors.map(contributor => contributor.title + \" | \")\r\n    :null\r\n\r\n\r\nconst SinglePodcast = React.memo(({podcast, podcast : {title, _id, thumbnail, hosts, episodes}}) => {\r\n       \r\n    return <div className=\"single-podcast\">    \r\n        <Link to ={`/podcasts/${_id}`}>\r\n            <div className=\"image-view\">\r\n                <div className = \"podcast-text\">\r\n                    <h4>{title.toUpperCase()}</h4>\r\n                    <div className=\"horizontal-line podcast-horizontal-line white-background\"/>\r\n                    {\r\n                        hosts.length < 1\r\n                        ?\"\"\r\n                        :<h5>{renderHosts(hosts)}</h5>\r\n                    }\r\n                </div> \r\n                <div className=\"filter\"/>\r\n                <img src={`${BASE_URL}/${thumbnail}`} alt={`${title} podcast thumbnail`}/>                                            \r\n            </div>\r\n            </Link>     \r\n    {episodes.length < 1\r\n    ?null\r\n    :<PlaylistView track={{...episodes[episodes.length - 1], podcast:podcast}} classes=\"absolute\"/>}\r\n                \r\n            \r\n        <div className=\"podcast-vertical-widget\">\r\n            <p className=\"podcast-vertical-text\">\r\n                <b>007</b>                           \r\n            </p>\r\n            <div className=\"vertical-line white\"/>\r\n            <div className=\"social-links\"> \r\n                <i className=\"fab fa-facebook-f\"/>\r\n                <i className=\"fab fa-instagram\"/>\r\n                <i className=\"fab fa-twitter\"/>\r\n            </div>             \r\n            <div className=\"vertical-line white\"/>\r\n        </div>                       \r\n    </div>\r\n})\r\n                   \r\n        \r\n\r\n\r\n\r\nexport default SinglePodcast;","import React, { useContext, useEffect } from 'react';\r\nimport './styles.css';\r\nimport {AppConsumer} from '../../context/AudioContext';\r\nimport SinglePodcast from '../../components/SinglePodcast/SinglePodcast';\r\nimport { AudioContext, AudioProvider } from '../../context/AudioContext';\r\n\r\nconst renderPodcasts = (podcasts = [], start=0, end=-1) => podcasts.length < 1\r\n    ?\"No podcasts...\"\r\n    :podcasts.slice(start, end).map((podcast, index) => <SinglePodcast key={index} podcast={podcast}/>)\r\n\r\n\r\n\r\n\r\nconst PodcastGrid = (props) => {\r\n\r\n    const {podcasts} = useContext(AudioContext)\r\n\r\n    return <section className =\"podcast-grid\">\r\n                    <h2>{props.title}</h2>\r\n                    <div className=\"podcast-grid-container\">\r\n                        {renderPodcasts(podcasts, props.start, props.end)}        \r\n                    </div>\r\n                </section>\r\n}\r\n        \r\n\r\nexport default PodcastGrid;","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport \"./style.css\";\r\nimport {AppConsumer} from '../../context/AudioContext';\r\nimport PlaylistView from \"../PlaylistView/PlaylistView\";\r\nimport {BASE_URL} from '../../utils/api';\r\n\r\nconst SingleAlbum = React.memo(({album, album : {title, _id, thumbnail, contributingArtists, tracks}}) => \r\n                                <div className=\"single-album\"> \r\n                                    <Link to ={`/albums/${_id}`}>\r\n                                        <div className=\"album-art\">\r\n                                            <div className=\"album-filter\"/>\r\n                                            <img src={`${BASE_URL}/${thumbnail}`} alt={`${title} album thumbnail`}/> \r\n                                        </div>  \r\n                                        <div className=\"album-buttons\"/>        \r\n                                        <div className = \"album-text\">\r\n                                            <h4>{title.toUpperCase()}</h4>\r\n                                            <p>{contributingArtists[0].title}</p>\r\n                                            <div className=\"horizontal-line album-horizontal-line white-background\"/>                                            \r\n                                        </div>  \r\n                                    </Link>\r\n                                </div>\r\n)\r\nexport default SingleAlbum;","import React, { useContext } from 'react';\r\nimport './styles.css';\r\nimport { AudioContext } from '../../context/AudioContext';\r\nimport SingleAlbum from '../../components/SingleAlbum/SingleAlbum';\r\n\r\nconst renderAlbums = (albums = [], start=0, end=-1) => albums.length < 1\r\n    ?\"No albums...\"\r\n    :albums.map((album, index) => <SingleAlbum key={index} album={album}/>)\r\n\r\n\r\n\r\nconst AlbumGrid = props => {\r\n    const {albums} = useContext(AudioContext)\r\n\r\n    return <section className =\"album-grid\">\r\n                            <h2>{props.title}</h2>\r\n                            <div className=\"album-grid-container\">\r\n                                {\r\n                                    renderAlbums(albums, props.start, props.end)\r\n                                }        \r\n                            </div>\r\n                        </section>\r\n}\r\nexport default AlbumGrid;","import React from 'react';\r\nimport PodcastGrid from '../layouts/PodcastGrid/PodcastGrid';\r\nimport AlbumGrid from '../layouts/AlbumGrid/AlbumGrid';\r\n\r\nexport default function Feed() {\r\n    return (\r\n        <>\r\n            <PodcastGrid title={\"Recommended podcasts\"} start={0} end={12}/>\r\n            <AlbumGrid title={\"Recommended Albums\"}/>            \r\n            <PodcastGrid title={\"Popular\"} start={12} />            \r\n            <AlbumGrid title={\"New Albums\"}/>            \r\n        </>\r\n    )\r\n}\r\n","import './styles.css';\r\n\r\nimport React from 'react';\r\n\r\nconst renderContributors = contributors => \r\n    contributors\r\n    ?contributors.map((contributor, index) => index === contributors.length - 1 ? contributor.title : contributor.title + \" | \")\r\n    :\"\"\r\n\r\n\r\nconst index = ({thumbnail, title, contributors}) => (\r\n        <div className = \"parent-info\">\r\n            <img src = {thumbnail} />\r\n            <div className=\"parent-info-text\">\r\n                <h3>{title}</h3>                \r\n                <h5>{renderContributors(contributors)}</h5>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\nexport default index;\r\n","import React, { useContext } from 'react';\r\nimport { AudioContext } from '../../context/AudioContext';\r\nimport './styles.css';\r\n\r\nconst renderContributors = contributors => \r\n    contributors\r\n    ?contributors.map((contributor, index) => index === contributors.length - 1 ? contributor.title : contributor.title + \", \")\r\n    :\"pen15\"\r\n\r\n\r\n    //if the user clicks an album track, display the artists name and track title in the media player\r\n    //otherwise, display podcast title and track title\r\nconst setUpTrack = (track, artist) => ({ \r\n    ...track, parent : {...track.parent, title: artist}\r\n})\r\n\r\n\r\nconst PlaylistTable = ({items = [], parent, contributors, album}) => {\r\n    const {playTrack} = useContext(AudioContext)\r\n\r\n    return <div>\r\n                <table>\r\n                    <tbody>\r\n                        {\r\n                            items.map(\r\n                                (item, index) => <tr key={index} onClick={() =>  album ? playTrack(setUpTrack({...item, parent}, contributors[0].title)) : playTrack({...item, parent})}><td>{item.title}</td><td>{renderContributors(contributors)}</td></tr>)\r\n                          \r\n                        }\r\n                    </tbody>\r\n                </table>            \r\n            </div>\r\n}\r\nexport default PlaylistTable;\r\n","import React from 'react';\r\nimport {BASE_URL} from '../utils/api';\r\n\r\nimport ParentInfo from '../components/ParentInfo';\r\nimport PlaylistView from '../components/PlaylistView/PlaylistView';\r\nimport PlaylistTable from '../components/PlaylistTable';\r\n\r\nclass PodcastDetails extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            podcast : {}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){        \r\n\r\n        fetch(`${BASE_URL}/api/podcasts/${this.props.match.params.id}`)\r\n        .then(res => res.json())\r\n        .then(podcast =>this.setState((prevState, props) => ({\r\n                    ...prevState,\r\n                    podcast\r\n                }))     \r\n        )\r\n        .catch(error => console.log(error))\r\n    }\r\n\r\n    render(){        \r\n\r\n        let episodes =  this.state.podcast.episodes \r\n        ? this.state.podcast.episodes.map((episode, index) => <PlaylistView key={index} track={episode}/>) \r\n        : \"loading...\";\r\n\r\n        return (\r\n            <div>\r\n                <ParentInfo thumbnail={`${BASE_URL}/${this.state.podcast.thumbnail}`} contributors={this.state.podcast.hosts} title={this.state.podcast.title}/>\r\n                <PlaylistTable items={this.state.podcast.episodes} contributors={this.state.podcast.hosts} parent={this.state.podcast}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PodcastDetails;\r\n ","import React from 'react';\r\nimport {BASE_URL} from '../utils/api';\r\n\r\nimport ParentInfo from '../components/ParentInfo';\r\nimport PlaylistView from '../components/PlaylistView/PlaylistView';\r\nimport PlaylistTable from '../components/PlaylistTable';\r\n\r\nclass AlbumDetails extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            album : {}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){        \r\n\r\n        fetch(`${BASE_URL}/api/albums/${this.props.match.params.id}`)\r\n        .then(res => res.json())\r\n        .then(album =>this.setState((prevState, props) => ({\r\n                    ...prevState,\r\n                    album\r\n                }))     \r\n        )\r\n        .catch(error => console.log(error))\r\n    }\r\n\r\n    render(){        \r\n\r\n        const playlistTable =  this.state.album \r\n        ? <PlaylistTable items={this.state.album.tracks} contributors={this.state.album.contributingArtists} parent={this.state.album} album={true}/>\r\n        : \"loading...\";  \r\n\r\n        const parentInfo =  this.state.album \r\n        ? <ParentInfo thumbnail={`${BASE_URL}/${this.state.album.thumbnail}`} contributors={this.state.album.contributingArtists} title={this.state.album.title}/>\r\n        : \"loading...\";       \r\n\r\n        return (\r\n            <div>                \r\n                {parentInfo}\r\n                {playlistTable}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AlbumDetails;\r\n ","import React, {useState, useEffect} from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\nimport './App.css';\r\nimport {AppProvider, AudioProvider} from './context/AudioContext';\r\nimport MainMenu from './components/MainMenu';\r\nimport AudioPlayer from './components/AudioPlayer/AudioPlayer.jsx';\r\nimport SidebarLeft from './components/SidebarLeft';\r\nimport SidebarRight from './components/SidebarRight';\r\nimport Feed from \"./Pages/Feed\";\r\nimport PodcastDetails from \"./Pages/PodcastDetails\";\r\nimport AlbumDetails from \"./Pages/AlbumDetails\";\r\nimport {BASE_URL} from './utils/api';\r\n\r\nclass ClassApp extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      audioState : {\r\n        playState : \"loaded\",\r\n        nowPlaying:{\r\n          title: \"What is\",\r\n          path: \"audio/default.mp3\",\r\n          _id: \"5daff1899a645939c0471689\",\r\n          parent: {\r\n              _id: \"5d709cd63eb0e22750940d2d\",\r\n              title: \"Brexit\",\r\n              thumbnail: `images/no-image.jpg`,\r\n          }\r\n        },\r\n        playlistIsHidden : false,\r\n        playlist : []\r\n      },\r\n      podcasts:[],\r\n      albums: [],\r\n      playTrack: track => {               \r\n        \r\n        if (track.title == this.state.audioState.nowPlaying.title && this.state.audioState.playState == \"playing\"){\r\n          console.log(\"pausing track\");\r\n          \r\n          this.setState({\r\n            ...this.state,\r\n            audioState : {\r\n              ...this.state.audioState, \r\n              playState:'paused'\r\n            }\r\n          });          \r\n        }\r\n        else{\r\n          console.log(\"playing track\", this.state.audioState);\r\n          \r\n          this.setState(\r\n            {\r\n              ...this.state,\r\n              audioState:{   \r\n                ...this.state.audioState,           \r\n                playState:'playing',\r\n                nowPlaying:track\r\n              }\r\n            }\r\n          )\r\n        }\r\n      },\r\n      stopTrack: () => {  \r\n        console.log(\"stopping...\");\r\n         \r\n        this.setState({\r\n          ...this.state,\r\n          audioState : {\r\n            ...this.state.audioState, \r\n            playState:'stopped'\r\n          }\r\n        });             \r\n        \r\n      },\r\n      toggleTrack: () => {  \r\n        if(this.state.audioState.playState === \"playing\"){\r\n          this.setState(\r\n            {\r\n              ...this.state,\r\n              audioState:{   \r\n                ...this.state.audioState,           \r\n                playState:'paused'\r\n              }\r\n            }\r\n          )  \r\n        }else{\r\n          this.setState(\r\n            {\r\n              ...this.state,\r\n              audioState:{   \r\n                ...this.state.audioState,           \r\n                playState:'playing'\r\n              }\r\n            }\r\n          )  \r\n        }\r\n      }\r\n      \r\n  }\r\n    \r\n  };\r\n\r\n  fetchPodcasts(url = `${BASE_URL}/api/podcasts`) {\r\n    fetch(url)\r\n    .then(res => res.json()\r\n    )\r\n    .then(podcasts => this.setState({podcasts})\r\n    )   \r\n    .catch(error => console.log(\"error\", error));    \r\n  }\r\n\r\n  fetchAlbums(url = `${BASE_URL}/api/albums`){\r\n    console.log(\"url:\",url);\r\n    \r\n    fetch(url)\r\n    .then(res => res.json())\r\n    .then(albums => this.setState({...this.state, albums}))\r\n    .catch(error => console.log(\"error\", error));\r\n  }\r\n  \r\n\r\n  componentDidMount(){ \r\n    this.fetchPodcasts(); \r\n    this.fetchAlbums(); \r\n    console.log(\"audio state:\", this.state);   \r\n  }\r\n\r\n  render(){      \r\n    return (\r\n        <AppProvider value={{...this.state}}>\r\n          <div className=\"App\">\r\n              <Router> \r\n                <MainMenu/>\r\n                <div className=\"main\">\r\n                  <SidebarLeft/>        \r\n                  <div className = \"main-content\">  \r\n                    <Switch>\r\n                      <Route exact path=\"/podcasts/:id\" component={PodcastDetails}/> \r\n                      <Route exact path=\"/albums/:id\" component={AlbumDetails}/> \r\n                      <Route exact path=\"/\">\r\n                        <Feed/>\r\n                      </Route>\r\n                      <Route render={() => <div><h2>Not found...</h2></div>} />\r\n                    </Switch>  \r\n                    \r\n                  </div>                  \r\n                  <SidebarRight/>  \r\n                </div>\r\n                <AudioPlayer audioState={this.state.audioState} toggleTrack={this.state.toggleTrack} stopTrack={this.state.stopTrack}/>\r\n              </Router>\r\n          </div>\r\n        </AppProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst App = () => {\r\n\r\n\r\n  \r\n  \r\n   \r\n  return (\r\n      <AppProvider>\r\n        <AudioProvider>\r\n          <div className=\"App\">\r\n              <Router> \r\n                <MainMenu/>\r\n                <div className=\"main\">\r\n                  <SidebarLeft/>        \r\n                  <div className = \"main-content\">  \r\n                    <Switch>\r\n                      <Route exact path=\"/podcasts/:id\" component={PodcastDetails}/> \r\n                      <Route exact path=\"/albums/:id\" component={AlbumDetails}/> \r\n                      <Route exact path=\"/\">\r\n                        <Feed/>\r\n                      </Route>\r\n                      <Route render={() => <div><h2>Not found...</h2></div>} />\r\n                    </Switch>                      \r\n                  </div>                  \r\n                  <SidebarRight/>  \r\n                </div>\r\n                <AudioPlayer/>\r\n              </Router>\r\n          </div>\r\n        </AudioProvider>\r\n      </AppProvider>\r\n  );\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}