{"version":3,"sources":["context/index.js","components/MainMenu/index.jsx","components/PlaylistView/index.jsx","components/SinglePodcast/index.jsx","layouts/PodcastGrid/index.jsx","components/AudioPlayer/index.jsx","components/Sidebar/index.jsx","components/SidebarLeft/index.jsx","components/SidebarRight/index.jsx","App.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","AppProvider","Provider","AppConsumer","Consumer","MainMenu","className","href","PlaylistView","props","episode","state","console","log","audioState","nowPlaying","title","playing","onClick","playTrack","podcast","SinglePodcast","toUpperCase","hosts","src","thumbnail","alt","episodes","length","PodcastGrid","podcasts","start","end","slice","map","index","key","renderPodcasts","AudioPlayer","previousProps","previousState","this","player","play","pause","id","ref","controls","preload","path","Component","Sidebar","children","SidebarLeft","class","SidebarRight","App","_id","playlistIsHidden","playlist","track","setState","stopTrack","pauseTrack","nextTrack","previousTrack","url","fetch","then","res","json","data","catch","error","fetchPodcasts","value","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df85eb07.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const AppContext = React.createContext({});\r\n\r\nexport const AppProvider = AppContext.Provider;\r\n\r\nexport const AppConsumer = AppContext.Consumer;\r\n\r\n","import React from 'react';\r\nimport \"./styles.css\";\r\n\r\nconst MainMenu = () => <menu className=\"main-menu\">\r\n    <div className=\"menu-logo\">\r\n        <a href=\"localhost:3001\"><h1> <i className=\"fas fa-stream\"/> Spicecast</h1></a>\r\n    </div>\r\n    <ul className=\"menu-items\">         \r\n        <li><a href=\"localhost:3001\"><i className=\"fas fa-plus\"/> Post</a></li>\r\n        <li><a href=\"localhost:3001\"><i className=\"fas fa-cloud-upload-alt\"/> Uploads</a></li>\r\n        <li><a href=\"localhost:3001\"><i className=\"fas fa-th-large\"/> Categories</a></li>\r\n        <li><a href=\"localhost:3001\"><i className=\"fas fa-bell yellow\"/> 3</a></li>\r\n        <li><a href=\"localhost:3001\"><i className=\"fas fa-user\"/> Sign in</a></li>\r\n    </ul>\r\n\r\n</menu>\r\n\r\nexport default MainMenu;","import React from 'react';\r\nimport './styles.css';\r\nimport {AppConsumer} from '../../context';   \r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\n\r\nconst PlaylistView = props => {\r\n    \r\n    if(!props.episode){         \r\n        return <div className=\"playlist-view\"></div>;        \r\n    }\r\n    else return <AppConsumer>\r\n                    {\r\n                       state => {\r\n                           console.log(\"playing \",state.audioState.nowPlaying.title,\"? \",state.audioState.playing);\r\n                           \r\n                        return  <div className=\"playlist-view\">\r\n                                    <div className=\"podcast-play\" onClick={() => state.playTrack({...props.episode, podcast:{...props.episode.podcast, title:props.podcast}})}>\r\n                                        {\r\n                                        state.audioState.playing && state.audioState.nowPlaying.title === props.episode.title \r\n                                        ? <i className=\"far fa-pause-circle\"/> \r\n                                        : <i className=\"far fa-play-circle\"/>\r\n                                        } \r\n                                        <p>{props.episode.title} </p>                       \r\n                                    </div>  \r\n                                </div>\r\n                       }\r\n                    }\r\n                </AppConsumer>  \r\n                        \r\n\r\n   \r\n};\r\n\r\nexport default PlaylistView;","import React from \"react\";\r\nimport \"./style.css\";\r\nimport {AppConsumer} from '../../context'\r\nimport PlaylistView from \"../PlaylistView\";\r\n\r\nconst SinglePodcast = (props) => <div className=\"single-podcast\">                            \r\n                                    <div className=\"image-view\">\r\n                                        <div className = \"podcast-text\">\r\n                                            <h4>{props.title.toUpperCase()}</h4>\r\n                                            <h5>{props.hosts[0]} | {props.hosts[1]}</h5>\r\n                                            <div className=\"horizontal-line podcast-horizontal-line white-background\"/>\r\n                                        </div> \r\n                                        <div className=\"filter\"/>\r\n                                        <img src={`http://localhost:3000/images/${props.thumbnail}`} alt={`${props.title} podcast thumbnail`}/>                                            \r\n                                    </div>\r\n                                    <AppConsumer>\r\n                                        { state => <PlaylistView episode={props.episodes[props.episodes.length -1]} podcast={props.title}/> }\r\n                                    </AppConsumer>   \r\n                                    <div className=\"podcast-vertical-widget\">\r\n                                        <p className=\"podcast-vertical-text\">\r\n                                            <b>007</b>                           \r\n                                        </p>\r\n                                        <div className=\"vertical-line white\"/>\r\n                                        <div className=\"social-links\"> \r\n                                            <i className=\"fab fa-facebook-f\"/>\r\n                                            <i className=\"fab fa-instagram\"/>\r\n                                            <i className=\"fab fa-twitter\"/>\r\n                                        </div>             \r\n                                        <div className=\"vertical-line white\"/>\r\n                                    </div>                       \r\n                                 </div>\r\n                   \r\n        \r\n\r\n\r\n\r\nexport default SinglePodcast;","import React from 'react';\r\nimport './styles.css';\r\nimport {AppConsumer} from '../../context';\r\nimport SinglePodcast from '../../components/SinglePodcast';\r\n\r\nconst renderPodcasts = (podcasts, start=0, end=-1) => podcasts.length < 1\r\n    ?\"No podcasts...\"\r\n    :podcasts.slice(start, end).map((podcast, index) => <SinglePodcast key={index} title={podcast.title} hosts={podcast.hosts} thumbnail={podcast.thumbnail} episodes={podcast.episodes}/>)\r\n    \r\n\r\n\r\n\r\n\r\nconst PodcastGrid = (props) => (\r\n    <AppConsumer>\r\n        { \r\n            state =>   <section className =\"podcast-grid\">\r\n                            <h2>{props.title}</h2>\r\n                            <div className=\"podcast-grid-container\">\r\n                                {renderPodcasts(state.podcasts, props.start, props.end)}        \r\n                            </div>\r\n                        </section>\r\n        }\r\n    </AppConsumer>\r\n    \r\n);\r\n\r\nexport default PodcastGrid;","import React from 'react';\r\nimport './styles.css';\r\nimport {AppConsumer} from '../../context';\r\n\r\nclass AudioPlayer extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    componentDidUpdate(previousProps, previousState){       \r\n\r\n        if(!this.props.playing){\r\n            this.player.pause();\r\n            return;\r\n        }\r\n        this.player.play();                \r\n    }\r\n\r\n    render(){\r\n\r\n        return <AppConsumer>\r\n                   { \r\n                       state => <section id=\"audio-player\">\r\n                                  <div className=\"audio-details\">\r\n                                      <h4>\r\n                                          {state.audioState.nowPlaying.podcast.title} - {state.audioState.nowPlaying.title}\r\n                                      </h4>\r\n                                  </div>\r\n                                  <audio\r\n                                    ref={ref => this.player = ref}\r\n                                    controls\r\n                                    preload=\"auto\"\r\n                                    src={state.audioState.nowPlaying.path}>\r\n                                        Your browser does not support the\r\n                                        <code>audio</code> element.\r\n                                  </audio>\r\n                                </section> \r\n                   }\r\n               </AppConsumer>  \r\n    }\r\n} \r\n    \r\n    export default AudioPlayer;","import React from 'react';\r\nimport \"./styles.css\";\r\n\r\nexport default function Sidebar(props) {\r\n    return (\r\n        <div className=\"sidebar\">\r\n          <div className=\"sidebar-content\">\r\n            {props.children}            \r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Sidebar from '../Sidebar';\r\nimport './styles.css';\r\n\r\nexport default function SidebarLeft() {\r\n    return (\r\n        <Sidebar>\r\n           <div className=\"sidebar-left\">\r\n            <div className=\"profile\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/d/dc/Profile-jose-bermudez.jpg\" alt=\"Profile picture\"/>\r\n                <div>\r\n                    <h5>Eric Summers</h5>\r\n                    <p>View Profile</p>\r\n                </div>\r\n            </div>\r\n                <ul>\r\n                    <li><div><i class=\"far fa-clone\"/><h5>Feed</h5></div></li>\r\n                    <li><div><i class=\"fas fa-compass\"/><h5>New Shows</h5></div></li>\r\n                </ul>\r\n                <div className=\"horizontal-line light-grey-background\"/>\r\n                <ul>\r\n                    <li><div><i class=\"fas fa-heart\"/><h5>Favourites</h5></div></li>\r\n                    <li><div><i class=\"fas fa-history\"/><h5>History</h5></div></li>\r\n                    <li><div><i class=\"far fa-clock\"/><h5>Listen Later</h5></div></li>\r\n                    <li><div><i class=\"fas fa-list\"/><h5>Playlists</h5></div></li>\r\n                </ul>\r\n                <div className=\"horizontal-line light-grey-background\"/>\r\n                <ul>\r\n                    <li><div><i class=\"fas fa-chart-line\"/><h5>Trending</h5></div></li>\r\n                </ul>\r\n           </div>\r\n        </Sidebar>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Sidebar from '../Sidebar';\r\nimport './styles.css';\r\n\r\nexport default function SidebarRight() {\r\n    return (\r\n        <Sidebar >\r\n            <div className=\"sidebar-right\">                \r\n                <h4>People to follow</h4>\r\n                <div className=\"follow\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/d/dc/Profile-jose-bermudez.jpg\" alt=\"Profile picture\"/>\r\n                    <div className=\"follow-profile\">\r\n                        <h5>Chris Coco</h5>\r\n                        <h6>98,000 followers</h6>\r\n                        <button>Follow</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"follow\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/d/dc/Profile-jose-bermudez.jpg\" alt=\"Profile picture\"/>\r\n                    <div className=\"follow-profile\">\r\n                        <h5>BBC World Sercice</h5>\r\n                        <h6>1,000 followers</h6>\r\n                        <button>Follow</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"follow\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/d/dc/Profile-jose-bermudez.jpg\" alt=\"Profile picture\"/>\r\n                    <div className=\"follow-profile\">\r\n                        <h5>Desi</h5>\r\n                        <h6>7,000 followers</h6>\r\n                        <button>Follow</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"horizontal-line light-grey-background\"/>\r\n            </div>\r\n        </Sidebar>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {AppProvider} from './context';\nimport MainMenu from './components/MainMenu';\nimport PodcastGrid from './layouts/PodcastGrid';\nimport AudioPlayer from './components/AudioPlayer';\nimport SidebarLeft from './components/SidebarLeft';\nimport SidebarRight from './components/SidebarRight';\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      audioState : {\n        playing : false,\n        nowPlaying:{\n          title: \"What is\",\n          path: \"https://emp.bbc.co.uk/0066df6d-3f70-4809-88f9-653ecfe6a64d\",\n          thumbnail: \"http://localhost:3000/images/no-image.png\",\n          _id: \"5daff1899a645939c0471689\",\n          podcast: {\n              _id: \"5d709cd63eb0e22750940d2d\",\n              title: \"Brexit\"\n          }\n      },\n        playlistIsHidden : false,\n        playlist : []\n      },\n      podcasts:[],\n      playTrack: track =>{ \n        if (track.title == this.state.audioState.nowPlaying.title && this.state.audioState.playing){\n          console.log(\"pausing \", track.title);\n          this.setState({\n            ...this.state,\n            audioState : {\n              ...this.state.audioState, \n              playing:false\n            }\n          });\n          \n        }\n        else{\n          this.setState(\n            {\n              ...this.state,\n              audioState:{   \n                ...this.state.audioState,           \n                playing:true,\n                nowPlaying:track\n              }\n            }\n          )\n        }\n      },\n      stopTrack: track => this.setState({}),\n      pauseTrack: track => this.setState({}),\n      nextTrack: () => this.setState({}),\n      previousTrack: () => this.setState({})\n      \n    }\n\n    \n  };\n\n  fetchPodcasts(url = \"http://localhost:3000/podcasts\") {\n    fetch(url)\n        .then(res => res.json()\n        )\n        .then(data => this.setState({podcasts:data})\n        )   \n        .catch(error => console.log(\"error\", error))    \n  }\n  \n\n  componentDidMount(){ \n    this.fetchPodcasts();    \n  }\n\n  render(){      \n    return (\n        <AppProvider value={{...this.state}}>\n          <div className=\"App\">\n              \n              <MainMenu/>\n              <div className=\"main\">\n                <SidebarLeft/>        \n                <div className = \"main-content\">    \n                  <PodcastGrid title={\"Recommended for you\"} start={0} end={12}/>\n                  <PodcastGrid title={\"Popular\"} start={7} />\n                </div>                  \n                <SidebarRight/>   \n                \n                              \n              </div>\n              \n              <AudioPlayer playing={this.state.audioState.playing} />\n          </div>\n        </AppProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}